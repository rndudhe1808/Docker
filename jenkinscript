pipeline {
    agent any

    stages {
        stage('Clone GitHub Repository') {
            steps {
                script {
                    // Clone the GitHub repository containing the Dockerfile
                    git branch: 'master', url: "https://github.com/your/github-repo.git"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile with a timestamp-based tag
                    docker.build("your/dockerhub-repo:" + new Date().format("yyyyMMdd-HHmmss"))
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    // Push the Docker image to Docker Hub
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        docker.image("your/dockerhub-repo:" + new Date().format("yyyyMMdd-HHmmss")).push()
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run a container based on the Docker image with automatic removal after 5 minutes
                    def containerTag = new Date().format("yyyyMMdd-HHmmss")
                    def containerName = "your-container-name-${containerTag}"
                    docker.image("your/dockerhub-repo:${containerTag}").run("--name ${containerName} -d -p 8080:8080 --rm")
                }
            }
        }
    }

    post {
        always {
            // Remove any running containers after the job completes
            timeout(time: 5, unit: 'MINUTES') {
                script {
                    docker.image("your/dockerhub-repo:${containerTag}").remove(force: true)
                }
            }
        }
    }
}
